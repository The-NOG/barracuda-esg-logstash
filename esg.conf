input {
	udp {
		port => 5001
		type => syslog
	}
}
filter{
    if[host] == "XXX.XXX.XXX.XXX"{
        grok {
			match => { "message" => "\A<%{INT}> %{NOTSPACE:program} %{GREEDYDATA:syslog_data}"}			
		}
        if [program] == "scan:" or [program] == "inbound/pass1:" or [program] == "outbound/smtp:" {
            if [program] == "scan:" {
                grok {
                    match => {"syslog_data" => "\A%{HOSTNAME:sender_hostname}\[%{IP:sender_ip}] %{NOTSPACE} %{INT} %{INT} %{NOTSPACE} %{NOTSPACE:encryption_flag} %{NOTSPACE:sender_email} %{NOTSPACE:recipient_email} %{NOTSPACE:score} %{NOTSPACE:action} %{NOTSPACE:reason} (.*) SZ:%{INT:size} SUBJ:%{GREEDYDATA:subject}"}
                }
            }
            else if [program] == "inbound/pass1:" {
                grok {
                    match => {"syslog_data" => "\A%{HOSTNAME:sender_hostname}\[%{IP:sender_ip}] %{NOTSPACE} %{INT} %{INT} %{NOTSPACE:service} %{GREEDYDATA:service_info}"}
                }
                if [service] == "SCAN" or [service] == "RECV"{
                    if [service] == "SCAN"{
                        grok {
                            match => {"service_info" => "\A%{NOTSPACE:encryption_flag} %{NOTSPACE:sender_email} %{NOTSPACE:recipient_email} %{NOTSPACE:score} %{NOTSPACE:action} %{NOTSPACE:reason} %{NOTSPACE:reason_extra} SZ:%{INT:size} SUBJ:%{GREEDYDATA:subject}"}
                        }
                    }
                    else {
                        grok {
                            match => {"service_info" => "\A%{NOTSPACE:sender_email} %{NOTSPACE:recipient_email} %{NOTSPACE:action} %{NOTSPACE:reason} %{GREEDYDATA:reason_extra}"}
                        }
                    }
                    mutate {
                        remove_field => [ "service_info" ]
                    }
                }
                else{

                }
            }
            else if [program] == "outbound/smtp:" {
                drop { }
            }
            mutate {
				remove_field => [ "syslog_data" ]
			}
			geoip {
				add_tag => [ "GeoIP" ]
				source => "sender_ip"
			}
            translate {
				field => "action"
				destination => "action"
				override => true
				dictionary => [
					"0", "Allowed Message",
					"1", "Aborted Message",
					"2", "Blocked Message",
					"3", "Quarantined Message",
					"4", "Tagged Message",
					"5", "Deferred Message",
					"6", "Per-User Quarantined Message",
                    "7", "Whitelisted Message",
                    "8", "Encrypted Message",
                    "9", "Redirected Message",
                    "10", "Attachments Stubbed"
					]
			}
            translate {
				field => "reason"
				destination => "reason"
				override => true
				dictionary => [
					"1", "Virus",
					"2", "Banned Attachment",
					"3", "RBL Match",
					"4", "Rate Control",
					"5", "Too Man Message In Session",
					"6", "Timeout Exceeded",
                    "7", "No Such Domain",
                    "8", "No Such User",
                    "9", "Subject Filter Match",
                    "11", "Client IP",
					"12", "Recipient Address",
					"13", "No Valid Recipients",
					"14", "Domain Not Found",
					"15", "Sender Address",
					"17", "Need Fully Qualified Recipient",
                    "18", "Need Fully Qualified Sender",
                    "19", "Unsupported Command",
                    "20", "MAIL FROM Syntax Error",
                    "21", "Bad Address Syntax",
					"22", "RCPT TO Syntax Error",
					"23", "Send EHLO/HELO First",
					"24", "Need MAIL Command",
					"25", "Nested MAIL Command",
                    "27", "EHLO/HELO Syntax Error",
                    "30", "Mail Protocol Violation",
                    "31", "Score",
					"34", "Header Filter Match",
					"35", "Sender Block/Accept",
                    "37", "Body Filter Match",
                    "38", "Message Size Bypass",
                    "39", "Intention Analysis Match",
                    "40", "SPF/Caller-ID",
                    "41", "Client Host Rejected",
					"44", "Authentication Not Enabled",
					"45", "Allowed Message Size Exceeded",
					"46", "Too Many Recipients",
                    "47", "Need RCPT Command",
                    "48", "DATA Syntax Error",
                    "49", "Internal Error",
                    "50", "Too Many Hops",
                    "51", "Mail Protocol Error",
					"55", "Invalid Parameter Syntax Error",
					"56", "STARTTLS Syntax Error",
                    "57", "TLS Already Active",
                    "58", "Too Many Errors",
                    "59", "Need STARTTLS First",
                    "60", "Spam Fingerprint Found",
                    "61", "Barracuda Reputation Whitelist",
					"62", "Barracuda Reputation Blocklist",
					"63", "DomainKeys",
					"64", "Recipient Verification Unavailable",
					"65", "Realtime Intent",
					"66", "Client Reverse DNS",
                    "67", "Email Registry",
                    "68", "Invalid Bounce",
                    "69", "Intent - Adult",
                    "70", "Intent - Political",
                    "71", "Multi-Level Intent",
					"72", "Attachment Limit Exceeded",
					"73", "System Busy",
					"74", "BRTS Intent",
					"75", "Per Domain Recipient",
					"76", "Per Domain Sender",
                    "77", "Per Domain Client IP",
                    "78", "Sender Spoofed",
                    "79", "Attachment Content",
                    "80", "Outlook Add-in",
					"82", "Barracuda IP/Domain Reputation",
					"83", "Authentication Failure",
					"85", "Attachment Size",
					"86", "Virus Detected by Extended Malware Protection",
                    "87", "Extended Malware Protection Engine is Busy",
                    "88", "A Message was Categorized for Email Category",
                    "89", "Macro Blocked"
					]
			}
        }
        else {

        }
    }
    else{
        drop { }
    }
}
output {
	elasticsearch {
		hosts => ["xxx.XXX.XXX.XXX:9200"]
		index => "esg%{+YYYY.MM.dd}"
	}
}
